# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - 5a048

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: '5a048'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}



# name: Deploy Azure Speech LLM Demo CI/CD

# on:
#   [push]
# # CONFIGURATION
# # For help, go to https://github.com/Azure/Actions
# # See this in-depth article on CI for Python applications: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
# #
# # 1. Set up the following secrets in your repository:
# #   AZURE_CREDENTIALS_GITHUB_SECRET
# #
# # 2. Change these variables for your configuration:
# env:
#   AZURE_WEBAPP_NAME: 5a048     # set this to your application's name
#   WORKING_DIRECTORY: '.'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
#   PYTHON_VERSION: '3.10'        # set the version to use
#   STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Install dependencies
#         working-directory: ${{ env.WORKING_DIRECTORY }}
#         run: |
#           sudo apt install python${{ env.PYTHON_VERSION }}-venv
#           python -m venv --copies antenv
#           source antenv/bin/activate
#           pip install setuptools flake8
#           pip install -r requirements.txt
#           run: |
#           - name: Zip artifact for deployment
#           run: zip release.zip ./* -r
  
#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: |
#             release.zip
#             !venv/

# deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app

#       - name: Unzip artifact for deployment
#         run: unzip release.zip

      
#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v3
#         id: deploy-to-webapp
#         with:
#           app-name: '5a048'
#           slot-name: 'Production'
#           publish-profile: ${{ secrets.AzureAppService_PublishProfile_8eef29bab055425a801c415a412fc7dc }}


#       # - name: Lint with flake8
#       #   run: |
#       #     # stop the build if there are Python syntax errors or undefined names
#       #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#       #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#       #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#       # # Azure login
#       # - uses: azure/login@v1
#       #   with:
#       #     creds: ${{ secrets.AZURE_CREDENTIALS_GITHUB_SECRET }}

#       # - uses: azure/appservice-settings@v1
#       #   with:
#       #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
#       #     mask-inputs: false
#       #     general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}' #'General configuration settings as Key Value pairs'  

#       # # deploy web app
#       # - uses: azure/webapps-deploy@v2
#       #   with:
#       #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
#       #     package: ${{ env.WORKING_DIRECTORY }}
#       #     startup-command: ${{ env.STARTUP_COMMAND }}

#       # # Azure logout
#       # - name: logout
#       #   run: |
#       #     az logout
